mod ARCADE-CRANE is
protecting QID .
sorts ToyID State .
subsort Qid < ToyID .

op floor : ToyID -> State [ctor] .
op on : ToyID ToyID -> State [ctor] .
op clear : ToyID -> State [ctor] .
op hold : ToyID -> State [ctor] .
op empty : -> State [ctor] .
op 1 : -> State [ctor] .
*** this is the identity State; itâ€™s just good to have one.
op _&_ : State State -> State [ctor assoc comm id: 1] .
vars X Y : ToyID .

rl [pickup] : empty & clear(X) & floor(X) => hold(X) .
rl [putdown] : hold(X) => empty & clear(X) & floor(X) .
rl [unstack] : empty & clear(X) & on(X,Y) => hold(X) & clear(Y) .
rl [stack] : hold(X) & clear(Y) => empty & clear(X) & on(X,Y) .
endm

***(
frew [1] empty & floor('mothergoose) & on('teddybear,'mothergoose) & on('soccerball,'teddybear) & clear('soccerball) & floor('dragondude) & clear('dragondude) .

continue 1 .  


search in ARCADE-CRANE : empty & floor('mothergoose) & on('teddybear, 'mothergoose) & on('soccerball, 'teddybear) & clear('soccerball) & floor('dragondude) & clear('dragondude) =>* S:State .

search in ARCADE-CRANE : empty & floor('mothergoose) & on('teddybear, 'mothergoose) & on('soccerball, 'teddybear) & clear('soccerball) & floor('dragondude) & clear('dragondude) =>+ empty & floor('teddybear) & on ('mothergoose,'teddybear) & on('soccerball,'mothergoose) & clear('soccerball) & floor('dragondude) & clear('dragondude) .



)***